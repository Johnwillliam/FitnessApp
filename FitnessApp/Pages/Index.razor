@page "/"
@inject UserProgressService UserProgressService
@inject NavigationManager NavigationManager
@inject Session Sesssion

<PageTitle>Home</PageTitle>

<h3>Home</h3>

@if (_user == null)
{
    <h3>Please login</h3>
}
else
{
    @if (_userProgresses.Any())
    {
        <h4>Select a Fitness Program:</h4>
        <div class="input-group">
            <select class="form-select" @onchange="SelectedUserProgress">
                <option value="">-- Select --</option>
                @foreach (var userProgress in _userProgresses)
                {
                    <option value="@userProgress.Id">@userProgress.Name</option>
                }
            </select>
        </div>
    }
    else
    {
        <p>Please create a <a href="/userprogress">User Progress</a> to track your progress.</p>
    }

    @if (_userProgress != null)
    {
        <h4 style="display:inline-block;margin-right:10px;">Select week:</h4>
        <div class="input-group">
            <select class="form-select" @onchange="WeekChanged" value="@_selectedWeek">
                <option value="">-- Select --</option>
                @foreach (var workout in _userProgress.Workouts.GroupBy(x => x.Week))
                {
                    <option value="@workout.Key">@workout.Key</option>
                }
            </select>
        </div>

        @if (_workouts != null && _workouts.Any())
        {
            <div class="accordion" id="accordionExample">

                @foreach (var workout in _workouts)
                {
                    <div class="accordion-item border-0">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@workout.Week-@workout.Day" aria-expanded="false" aria-controls="@workout.Week-@workout.Day">
                                Week @workout.Week - Day @workout.Day -
                                @if (@workout.Date.HasValue)
                                {
                                    @workout.Date.Value.ToString("dd-MM-yyyy")
                                }
                                else if (@workout.Skipped)
                                {
                                    <text>Skipped</text>
                                }
                                else
                                {
                                    <text>Todo</text>
                                }
                            </button>
                        </h2>
                        <div id="@workout.Week-@workout.Day" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                @foreach (var progress in workout.UserProgressWorkoutExercises)
                                {
                                    var previousWorkout = @GetPreviousExerciseData(progress).Result;
                                    <div class="card border-0">
                                        <div class="input-group">
                                            <h5 class="card-header" style="flex: 1;">@(progress.Excercise == null ? string.Empty : progress.Excercise.Name)</h5>
                                            <button type="button" class="btn btn-secondary" data-bs-toggle="dropdown" aria-expanded="false">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                                                    <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"></path>
                                                </svg>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item"><input type="date" @bind="@workout.Date" /></a></li>
                                                <li>
                                                    <a class="dropdown-item">
                                                        <input class="form-check-input" type="checkbox" @bind="@workout.Skipped" id="SkippedCheck">
                                                        <label class="form-check-label" for="SkippedCheck">
                                                            Skipped
                                                        </label>
                                                    </a>
                                                </li>
                                                <li><a class="dropdown-item" @onclick="@(async () => await CopySetTargets(progress))">Copy Targets</a></li>
                                                <li><a class="dropdown-item" @onclick="@(async () => await CopyFirstWeight(progress))">Copy First Weight</a></li>
                                                <li><a class="dropdown-item" @onclick="@(async () => await AllSetsDone(progress))">Complete All</a></li>
                                                <li><a class="dropdown-item">Previous Workout</a></li>
                                            </ul>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-dark table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col">Set</th>
                                                            <th scope="col">Target</th>
                                                            <th scope="col">RPE/%</th>
                                                            <th scope="col">Reps</th>
                                                            <th scope="col">Weight</th>
                                                            <th scope="col">
                                                                <button type="button" class="btn btn-link btn-sm" @onclick="@(async () => await AllSetsToggleDone(progress))">
                                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-check-all" viewBox="0 0 16 16">
                                                                        <path d="M8.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L2.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093L8.95 4.992a.252.252 0 0 1 .02-.022zm-.92 5.14.92.92a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 1 0-1.091-1.028L9.477 9.417l-.485-.486-.943 1.179z"></path>
                                                                    </svg>
                                                                    <span class="visually-hidden">Button</span>
                                                                </button>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var set in progress.UserProgressWorkoutExerciseSets)
                                                        {
                                                            <tr>
                                                                <td style="text-align:center">@set.SetNumber</td>
                                                                <td style="text-align:center">@progress.Reps</td>
                                                                <td style="text-align:center">@progress.RPE</td>
                                                                <td><input class="form-control" type="number" min="0" style="min-width:50px" @bind="@set.RepsDone" /></td>
                                                                <td><input class="form-control" type="number" min="0" @bind="@set.WeightDone" /></td>
                                                                <td>
                                                                    @if(set.IsCompleted)
                                                                    {
                                                                        <button type="button" class="btn btn-outline-secondary" @onclick="@(x => ToggleSetIsCompleted(set))">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                                                                                <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"></path>
                                                                            </svg>
                                                                            <span class="visually-hidden">Button</span>
                                                                        </button>
                                                                    }
                                                                    else
                                                                    {
                                                                        <button type="button" class="btn btn-outline-secondary" @onclick="@(x => ToggleSetIsCompleted(set))">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16">
                                                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"></path>
                                                                                <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"></path>
                                                                            </svg>
                                                                            <span class="visually-hidden">Button</span>
                                                                        </button>
                                                                    }
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <div>
            <button class="btn btn-outline-secondary" @onclick="Save">Save Progress</button>
            <button class="btn btn-outline-secondary" @onclick="Cancel">Cancel</button>
        </div>
    }
}